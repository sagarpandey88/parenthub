---
// No props needed for header
---

<header class="bg-white shadow-sm sticky top-0 z-50">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center">
            <i class="fas fa-heart text-white text-sm"></i>
          </div>
          <span class="text-xl font-bold text-gray-900">Parenting Journey</span>
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        <a href="/" class="text-gray-700 hover:text-primary-600 transition-colors">Home</a>
        <div class="relative group">
          <button class="flex items-center text-gray-700 hover:text-primary-600 transition-colors">
            Categories
            <i class="fas fa-chevron-down ml-1 text-sm"></i>
          </button>
          <div class="absolute top-full left-0 mt-2 w-56 bg-white rounded-lg shadow-lg border opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
            <div class="py-2">
              <a href="/categories/pre-pregnancy" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-50">
                <i class="fas fa-heart text-primary-600 w-5 mr-3"></i>
                Pre-Pregnancy
              </a>
              <a href="/categories/pregnancy" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-50">
                <i class="fas fa-baby text-secondary-600 w-5 mr-3"></i>
                Pregnancy
              </a>
              <a href="/categories/post-pregnancy" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-50">
                <i class="fas fa-home text-warm-600 w-5 mr-3"></i>
                Post-Pregnancy
              </a>
            </div>
          </div>
        </div>
        <a href="/blog" class="text-gray-700 hover:text-primary-600 transition-colors">Blog</a>
        <a href="/timeline" class="text-gray-700 hover:text-primary-600 transition-colors">Timeline</a>
        <a href="/tracker" class="text-gray-700 hover:text-primary-600 transition-colors">Tracker</a>
        <a href="/about" class="text-gray-700 hover:text-primary-600 transition-colors">About</a>
        <a href="/contact" class="text-gray-700 hover:text-primary-600 transition-colors">Contact</a>
      </div>
      
      <!-- Theme Switcher and Mobile Menu -->
      <div class="flex items-center space-x-4">
        <!-- Theme Switcher -->
        <div class="hidden md:flex items-center space-x-2 bg-white rounded-lg shadow-sm border px-3 py-2">
          <span class="text-sm font-medium text-gray-700">Theme:</span>
          <button
            id="theme-pink"
            class="w-6 h-6 rounded-full bg-pink-500 border-2 border-transparent hover:border-gray-400 transition-colors theme-btn"
            title="Girl Theme (Pink)"
            data-theme="pink"
          ></button>
          <button
            id="theme-blue"
            class="w-6 h-6 rounded-full bg-blue-500 border-2 border-transparent hover:border-gray-400 transition-colors theme-btn"
            title="Boy Theme (Blue)"
            data-theme="blue"
          ></button>
          <button
            id="theme-dark"
            class="w-6 h-6 rounded-full bg-gray-800 border-2 border-transparent hover:border-gray-400 transition-colors theme-btn"
            title="Dark Theme"
            data-theme="dark"
          ></button>
        </div>
        <!-- Search Button -->
        <button
          id="search-toggle"
          class="p-2 text-gray-700 hover:text-primary-600 transition-colors"
          aria-label="Search"
        >
          <i class="fas fa-search"></i>
        </button>
        
        <!-- Mobile Menu Button -->
        <button
          id="mobile-menu-toggle"
          class="md:hidden p-2 text-gray-700 hover:text-primary-600 transition-colors"
          aria-label="Menu"
        >
          <i class="fas fa-bars"></i>
        </button>
      </div>
    </div>
    
    <!-- Search Overlay -->
    <div id="search-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
      <div class="flex items-start justify-center pt-16">
        <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl mx-4">
          <div class="p-6">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-lg font-semibold text-gray-900">Search Articles</h3>
              <button id="search-close" class="text-gray-400 hover:text-gray-600">
                <i class="fas fa-times"></i>
              </button>
            </div>
            <div class="search-container relative">
              <input
                type="text"
                id="search-input"
                placeholder="Search for articles..."
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
              />
              <div id="search-results" class="absolute top-full left-0 right-0 bg-white border border-gray-300 rounded-b-lg shadow-lg hidden max-h-96 overflow-y-auto"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 border-t border-gray-200">
        <a href="/" class="block px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">Home</a>
        <div class="px-3 py-2">
          <span class="text-gray-900 font-medium block mb-2">Categories</span>
          <div class="pl-4 space-y-1">
            <a href="/categories/pre-pregnancy" class="block py-1 text-gray-600 hover:text-primary-600">Pre-Pregnancy</a>
            <a href="/categories/pregnancy" class="block py-1 text-gray-600 hover:text-primary-600">Pregnancy</a>
            <a href="/categories/post-pregnancy" class="block py-1 text-gray-600 hover:text-primary-600">Post-Pregnancy</a>
          </div>
        </div>
        <a href="/blog" class="block px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">Blog</a>
        <a href="/timeline" class="block px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">Timeline</a>
        <a href="/tracker" class="block px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">Tracker</a>
        <a href="/about" class="block px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">About</a>
        <a href="/contact" class="block px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">Contact</a>
        
        <!-- Mobile Theme Switcher -->
        <div class="px-3 py-2">
          <span class="text-gray-900 font-medium block mb-2">Theme</span>
          <div class="flex items-center space-x-3 pl-4">
            <button
              class="w-6 h-6 rounded-full bg-pink-500 border-2 border-transparent hover:border-gray-400 transition-colors theme-btn"
              data-theme="pink"
              title="Pink Theme"
            ></button>
            <button
              class="w-6 h-6 rounded-full bg-blue-500 border-2 border-transparent hover:border-gray-400 transition-colors theme-btn"
              data-theme="blue"
              title="Blue Theme"
            ></button>
            <button
              class="w-6 h-6 rounded-full bg-gray-800 border-2 border-transparent hover:border-gray-400 transition-colors theme-btn"
              data-theme="dark"
              title="Dark Theme"
            ></button>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Theme management
  const themes = {
    pink: {
      primary: '#ec4899', // pink-500
      secondary: '#f9a8d4', // pink-300
      accent: '#fdf2f8', // pink-50
      text: '#1f2937', // gray-800
      background: '#ffffff'
    },
    blue: {
      primary: '#3b82f6', // blue-500
      secondary: '#93c5fd', // blue-300
      accent: '#eff6ff', // blue-50
      text: '#1f2937', // gray-800
      background: '#ffffff'
    },
    dark: {
      primary: '#d1d5db', // gray-300
      secondary: '#9ca3af', // gray-400
      accent: '#374151', // gray-700
      text: '#f9fafb', // gray-50
      background: '#1f2937' // gray-800
    }
  };

  let currentTheme = 'pink';

  function applyTheme(themeName) {
    currentTheme = themeName;
    const theme = themes[themeName];
    const root = document.documentElement;
    
    // Update CSS custom properties
    root.style.setProperty('--theme-primary', theme.primary);
    root.style.setProperty('--theme-secondary', theme.secondary);
    root.style.setProperty('--theme-accent', theme.accent);
    root.style.setProperty('--theme-text', theme.text);
    root.style.setProperty('--theme-background', theme.background);
    
    // Apply theme classes
    if (themeName === 'dark') {
      document.body.classList.add('dark-theme');
      document.body.style.backgroundColor = theme.background;
      document.body.style.color = theme.text;
    } else {
      document.body.classList.remove('dark-theme');
      document.body.style.backgroundColor = '#fef7f0'; // warm-50
      document.body.style.color = theme.text;
    }
    
    // Update primary colored elements
    const primaryElements = document.querySelectorAll('.text-primary-600, .bg-primary-600, .border-primary-600, .hover\\:text-primary-600, .hover\\:bg-primary-700');
    primaryElements.forEach(el => {
      if (el.classList.contains('text-primary-600') || el.classList.contains('hover:text-primary-600')) {
        el.style.color = theme.primary;
      }
      if (el.classList.contains('bg-primary-600')) {
        el.style.backgroundColor = theme.primary;
      }
      if (el.classList.contains('border-primary-600')) {
        el.style.borderColor = theme.primary;
      }
    });
    
    // Update button borders to show active theme
    document.querySelectorAll('.theme-btn').forEach(btn => {
      btn.style.borderColor = 'transparent';
    });
    document.querySelectorAll(`[data-theme="${themeName}"]`).forEach(btn => {
      btn.style.borderColor = theme.primary;
      btn.style.borderWidth = '2px';
    });
    
    // Save theme preference
    localStorage.setItem('siteTheme', themeName);
    
    // Dispatch custom event for other components
    window.dispatchEvent(new CustomEvent('themeChanged', { detail: { theme: themeName } }));
  }

  document.addEventListener('DOMContentLoaded', () => {
    // Load saved theme or default to pink
    const savedTheme = localStorage.getItem('siteTheme') || 'pink';
    applyTheme(savedTheme);
    
    // Add event listeners to theme buttons
    document.querySelectorAll('.theme-btn').forEach(button => {
      button.addEventListener('click', function() {
        const theme = this.getAttribute('data-theme');
        applyTheme(theme);
      });
    });
    
    // Mobile menu toggle
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    
    mobileMenuToggle?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });
    
    // Search overlay toggle
    const searchToggle = document.getElementById('search-toggle');
    const searchOverlay = document.getElementById('search-overlay');
    const searchClose = document.getElementById('search-close');
    const searchInput = document.getElementById('search-input');
    
    searchToggle?.addEventListener('click', () => {
      searchOverlay?.classList.remove('hidden');
      searchInput?.focus();
    });
    
    searchClose?.addEventListener('click', () => {
      searchOverlay?.classList.add('hidden');
    });
    
    searchOverlay?.addEventListener('click', (e) => {
      if (e.target === searchOverlay) {
        searchOverlay.classList.add('hidden');
      }
    });
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!e.target.closest('nav') && !mobileMenu?.classList.contains('hidden')) {
        mobileMenu?.classList.add('hidden');
      }
    });
  });

  // Apply theme on navigation (for SPA-like behavior)
  document.addEventListener('astro:page-load', function() {
    const savedTheme = localStorage.getItem('siteTheme') || 'pink';
    applyTheme(savedTheme);
  });
</script>

<style>
  /* Custom CSS properties for theme colors */
  :root {
    --theme-primary: #ec4899;
    --theme-secondary: #f9a8d4;
    --theme-accent: #fdf2f8;
    --theme-text: #1f2937;
    --theme-background: #ffffff;
  }
  
  /* Dark theme specific styles */
  .dark-theme {
    background-color: var(--theme-background) !important;
    color: var(--theme-text) !important;
  }
  
  .dark-theme nav {
    background-color: #374151 !important;
    border-color: #4b5563 !important;
  }
  
  .dark-theme .bg-white {
    background-color: #374151 !important;
    color: #f9fafb !important;
  }
  
  .dark-theme .text-gray-700,
  .dark-theme .text-gray-600,
  .dark-theme .text-gray-900 {
    color: #f9fafb !important;
  }
  
  .dark-theme .border-gray-200,
  .dark-theme .border-gray-300 {
    border-color: #4b5563 !important;
  }
  
  /* Smooth transitions for theme changes */
  * {
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  }
</style>
