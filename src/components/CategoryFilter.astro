---
export interface Props {
  categories: string[];
  selectedCategory?: string | null;
}

const { categories, selectedCategory } = Astro.props;

// Category icons and colors
const categoryInfo = {
  'Pre-Pregnancy': { icon: 'fas fa-heart', color: 'primary' },
  'Pregnancy': { icon: 'fas fa-baby', color: 'secondary' },
  'Post-Pregnancy': { icon: 'fas fa-home', color: 'warm' }
};
---

<div class="flex flex-wrap gap-3">
  <!-- All Categories -->
  <a
    href="/blog"
    class={`inline-flex items-center px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
      !selectedCategory
        ? 'bg-primary-600 text-white'
        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
    }`}
  >
    <i class="fas fa-th-list mr-2"></i>
    All Categories
  </a>
  
  <!-- Individual Categories -->
  {categories.map((category) => {
    const info = categoryInfo[category] || { icon: 'fas fa-bookmark', color: 'primary' };
    const isSelected = selectedCategory?.toLowerCase() === category.toLowerCase();
    const categorySlug = category.toLowerCase().replace(/\s+/g, '-');
    
    return (
      <a
        href={`/categories/${categorySlug}`}
        class={`inline-flex items-center px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
          isSelected
            ? `bg-${info.color}-600 text-white`
            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
        }`}
      >
        <i class={`${info.icon} mr-2`}></i>
        {category}
      </a>
    );
  })}
</div>

<!-- Mobile Dropdown (for smaller screens) -->
<div class="md:hidden mt-4">
  <label for="category-select" class="block text-sm font-medium text-gray-700 mb-2">
    Filter by Category
  </label>
  <select
    id="category-select"
    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
    onchange="window.location.href = this.value"
  >
    <option value="/blog" selected={!selectedCategory}>All Categories</option>
    {categories.map((category) => {
      const categorySlug = category.toLowerCase().replace(/\s+/g, '-');
      const isSelected = selectedCategory?.toLowerCase() === category.toLowerCase();
      
      return (
        <option 
          value={`/categories/${categorySlug}`}
          selected={isSelected}
        >
          {category}
        </option>
      );
    })}
  </select>
</div>
