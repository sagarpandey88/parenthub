---
import BaseLayout from '@/layouts/BaseLayout.astro';
import BlogCard from '@/components/BlogCard.astro';
import { getCollection } from 'astro:content';

// Generate static paths for all categories
export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const categories = [...new Set(allPosts.map(post => post.data.category))];
  
  return categories.map(category => ({
    params: { 
      category: category.toLowerCase().replace(/\s+/g, '-') 
    },
    props: { 
      category,
      posts: allPosts.filter(post => post.data.category === category)
    }
  }));
}

const { category, posts } = Astro.props;
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.publishedDate).getTime() - new Date(a.data.publishedDate).getTime()
);

// Category descriptions and icons
const categoryInfo = {
  'Pre-Pregnancy': {
    description: 'Prepare your body and mind for conception with expert guidance on nutrition, lifestyle changes, fertility tips, and preconception health.',
    icon: 'fas fa-heart',
    color: 'primary'
  },
  'Pregnancy': {
    description: 'Navigate your pregnancy journey with week-by-week guides, health tips, exercise routines, and preparation for childbirth.',
    icon: 'fas fa-baby',
    color: 'secondary'
  },
  'Post-Pregnancy': {
    description: 'Support for new parents covering postpartum recovery, newborn care, breastfeeding, sleep training, and early childhood development.',
    icon: 'fas fa-home',
    color: 'warm'
  }
};

const info = categoryInfo[category] || {
  description: `Articles and resources about ${category.toLowerCase()}.`,
  icon: 'fas fa-bookmark',
  color: 'primary'
};
---

<BaseLayout
  title={`${category} Articles - Parenting Journey`}
  description={`${info.description} Find expert advice and practical tips for ${category.toLowerCase()}.`}
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Category Header -->
    <div class="text-center mb-12">
      <div class={`w-20 h-20 bg-${info.color}-100 rounded-full flex items-center justify-center mx-auto mb-6`}>
        <i class={`${info.icon} text-${info.color}-600 text-2xl`}></i>
      </div>
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        {category}
      </h1>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto mb-8">
        {info.description}
      </p>
      <div class="flex items-center justify-center gap-4 text-sm text-gray-500">
        <span>{sortedPosts.length} article{sortedPosts.length !== 1 ? 's' : ''}</span>
        <span>â€¢</span>
        <a href="/blog" class="text-primary-600 hover:text-primary-800">
          View All Categories
        </a>
      </div>
    </div>
    
    <!-- Articles Grid -->
    {sortedPosts.length > 0 ? (
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {sortedPosts.map((post) => (
          <BlogCard post={post} />
        ))}
      </div>
    ) : (
      <div class="text-center py-16">
        <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
          <i class="fas fa-file-alt text-gray-400 text-2xl"></i>
        </div>
        <h3 class="text-xl font-semibold text-gray-900 mb-2">No articles yet</h3>
        <p class="text-gray-600 mb-6">
          We're working on adding more content to this category. Check back soon!
        </p>
        <a
          href="/blog"
          class="inline-flex items-center px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
        >
          Explore Other Categories
        </a>
      </div>
    )}
    
    <!-- Related Categories -->
    <section class="mt-16 pt-12 border-t border-gray-200">
      <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">
        Explore Other Categories
      </h2>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {Object.entries(categoryInfo)
          .filter(([cat]) => cat !== category)
          .map(([cat, catInfo]) => (
            <a
              href={`/categories/${cat.toLowerCase().replace(/\s+/g, '-')}`}
              class="block p-6 bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow"
            >
              <div class={`w-12 h-12 bg-${catInfo.color}-100 rounded-lg flex items-center justify-center mb-4`}>
                <i class={`${catInfo.icon} text-${catInfo.color}-600 text-lg`}></i>
              </div>
              <h3 class="text-lg font-semibold text-gray-900 mb-2">{cat}</h3>
              <p class="text-gray-600 text-sm">
                {catInfo.description}
              </p>
            </a>
          ))
        }
      </div>
    </section>
  </div>
</BaseLayout>
