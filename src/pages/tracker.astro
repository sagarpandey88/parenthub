---
import BaseLayout from '@/layouts/BaseLayout.astro';
---

<BaseLayout
  title="Pregnancy Tracker - Monitor Your Journey Week by Week"
  description="Interactive pregnancy tracker to monitor your baby's development, track symptoms, and celebrate milestones throughout your pregnancy journey."
>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Theme Switcher -->
    <div class="fixed top-20 right-4 z-50 bg-white rounded-lg shadow-lg p-3 border">
      <div class="flex items-center space-x-2">
        <span class="text-sm font-medium text-gray-700">Theme:</span>
        <button
          id="theme-pink"
          class="w-8 h-8 rounded-full bg-pink-500 border-2 border-transparent hover:border-gray-400 transition-colors"
          title="Girl Theme (Pink)"
        ></button>
        <button
          id="theme-blue"
          class="w-8 h-8 rounded-full bg-blue-500 border-2 border-transparent hover:border-gray-400 transition-colors"
          title="Boy Theme (Blue)"
        ></button>
        <button
          id="theme-dark"
          class="w-8 h-8 rounded-full bg-gray-800 border-2 border-transparent hover:border-gray-400 transition-colors"
          title="Dark Theme"
        ></button>
      </div>
    </div>

    <!-- Page Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-6 theme-text">
        Pregnancy Tracker
      </h1>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
        Track your pregnancy journey week by week, monitor your baby's development, and celebrate every milestone.
      </p>
    </div>

    <!-- Tracker Setup -->
    <div class="bg-white rounded-lg shadow-lg p-8 mb-8 theme-bg">
      <h2 class="text-2xl font-bold mb-6 theme-text">Set Up Your Tracker</h2>
      
      <div class="grid md:grid-cols-2 gap-6">
        <!-- Due Date Input -->
        <div>
          <label for="due-date" class="block text-sm font-medium text-gray-700 mb-2">
            Expected Due Date
          </label>
          <input
            type="date"
            id="due-date"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 theme-ring"
          />
        </div>

        <!-- Current Week Display -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Current Week
          </label>
          <div class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50">
            <span id="current-week" class="text-lg font-semibold theme-text">
              Select due date to calculate
            </span>
          </div>
        </div>
      </div>
    </div>

    <!-- Progress Overview -->
    <div class="bg-white rounded-lg shadow-lg p-8 mb-8 theme-bg">
      <h2 class="text-2xl font-bold mb-6 theme-text">Your Progress</h2>
      
      <!-- Progress Bar -->
      <div class="mb-6">
        <div class="flex justify-between items-center mb-2">
          <span class="text-sm font-medium text-gray-700">Pregnancy Progress</span>
          <span id="progress-percentage" class="text-sm font-medium theme-text">0%</span>
        </div>
        <div class="w-full bg-gray-200 rounded-full h-3">
          <div id="progress-bar" class="h-3 rounded-full theme-progress transition-all duration-500" style="width: 0%"></div>
        </div>
      </div>

      <!-- Trimester Info -->
      <div class="grid md:grid-cols-3 gap-4">
        <div class="text-center p-4 rounded-lg bg-gray-50 theme-card">
          <div class="text-2xl font-bold theme-text" id="trimester-number">-</div>
          <div class="text-sm text-gray-600">Current Trimester</div>
        </div>
        <div class="text-center p-4 rounded-lg bg-gray-50 theme-card">
          <div class="text-2xl font-bold theme-text" id="weeks-remaining">-</div>
          <div class="text-sm text-gray-600">Weeks Remaining</div>
        </div>
        <div class="text-center p-4 rounded-lg bg-gray-50 theme-card">
          <div class="text-2xl font-bold theme-text" id="days-remaining">-</div>
          <div class="text-sm text-gray-600">Days Remaining</div>
        </div>
      </div>
    </div>

    <!-- Weekly Development -->
    <div class="bg-white rounded-lg shadow-lg p-8 mb-8 theme-bg">
      <h2 class="text-2xl font-bold mb-6 theme-text">This Week's Development</h2>
      
      <div id="weekly-content" class="space-y-6">
        <div class="text-center text-gray-500 py-8">
          Set your due date above to see your baby's weekly development information.
        </div>
      </div>
    </div>

    <!-- Symptom Tracker -->
    <div class="bg-white rounded-lg shadow-lg p-8 mb-8 theme-bg">
      <h2 class="text-2xl font-bold mb-6 theme-text">Symptom Tracker</h2>
      
      <div class="grid md:grid-cols-2 gap-6">
        <!-- Common Symptoms -->
        <div>
          <h3 class="text-lg font-semibold mb-4 theme-text">Track Your Symptoms</h3>
          <div class="space-y-3">
            <label class="flex items-center">
              <input type="checkbox" class="symptom-checkbox theme-checkbox" data-symptom="morning-sickness">
              <span class="ml-2 text-gray-700">Morning Sickness</span>
            </label>
            <label class="flex items-center">
              <input type="checkbox" class="symptom-checkbox theme-checkbox" data-symptom="fatigue">
              <span class="ml-2 text-gray-700">Fatigue</span>
            </label>
            <label class="flex items-center">
              <input type="checkbox" class="symptom-checkbox theme-checkbox" data-symptom="back-pain">
              <span class="ml-2 text-gray-700">Back Pain</span>
            </label>
            <label class="flex items-center">
              <input type="checkbox" class="symptom-checkbox theme-checkbox" data-symptom="heartburn">
              <span class="ml-2 text-gray-700">Heartburn</span>
            </label>
            <label class="flex items-center">
              <input type="checkbox" class="symptom-checkbox theme-checkbox" data-symptom="mood-swings">
              <span class="ml-2 text-gray-700">Mood Swings</span>
            </label>
            <label class="flex items-center">
              <input type="checkbox" class="symptom-checkbox theme-checkbox" data-symptom="food-cravings">
              <span class="ml-2 text-gray-700">Food Cravings</span>
            </label>
          </div>
        </div>

        <!-- Notes -->
        <div>
          <h3 class="text-lg font-semibold mb-4 theme-text">Notes</h3>
          <textarea
            id="weekly-notes"
            rows="6"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 theme-ring resize-none"
            placeholder="How are you feeling this week? Any questions for your next appointment?"
          ></textarea>
          <button
            id="save-notes"
            class="mt-3 px-4 py-2 theme-button text-white rounded-md hover:opacity-90 transition-colors"
          >
            Save Notes
          </button>
        </div>
      </div>
    </div>

    <!-- Appointment Reminders -->
    <div class="bg-white rounded-lg shadow-lg p-8 theme-bg">
      <h2 class="text-2xl font-bold mb-6 theme-text">Upcoming Appointments</h2>
      
      <div id="appointment-reminders" class="space-y-4">
        <div class="text-center text-gray-500 py-4">
          Based on your due date, important appointment reminders will appear here.
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // Pregnancy development data by week
  const pregnancyData = {
    4: {
      size: "Poppy Seed",
      development: "Your baby is the size of a poppy seed! The neural tube is forming, which will become the brain and spinal cord.",
      mom: "You might miss your period and notice early pregnancy symptoms like fatigue or breast tenderness.",
      appointments: []
    },
    8: {
      size: "Raspberry",
      development: "Baby is now the size of a raspberry! All major organs are forming, and the heart is beating.",
      mom: "Morning sickness may begin. Your first prenatal appointment should be scheduled soon.",
      appointments: ["First prenatal appointment"]
    },
    12: {
      size: "Lime",
      development: "Baby is the size of a lime! Reflexes are developing and baby can make a fist.",
      mom: "End of first trimester! Morning sickness may start to improve.",
      appointments: ["First trimester screening", "Nuchal translucency scan"]
    },
    16: {
      size: "Avocado",
      development: "Baby is the size of an avocado! You might be able to find out the gender soon.",
      mom: "You may start to feel baby's first movements (quickening).",
      appointments: []
    },
    20: {
      size: "Banana",
      development: "Baby is the size of a banana! This is the halfway point of your pregnancy.",
      mom: "You should be feeling regular movements now. Your belly is really showing!",
      appointments: ["Anatomy scan ultrasound", "Gender reveal possible"]
    },
    24: {
      size: "Corn",
      development: "Baby is the size of an ear of corn! Baby's hearing is developing.",
      mom: "You may start experiencing back pain as your belly grows.",
      appointments: ["Glucose screening test"]
    },
    28: {
      size: "Eggplant",
      development: "Baby is the size of an eggplant! Baby can blink and has sleep cycles.",
      mom: "Third trimester begins! You may feel more tired and uncomfortable.",
      appointments: ["Start of third trimester visits"]
    },
    32: {
      size: "Squash",
      development: "Baby is the size of a squash! Baby's bones are hardening, but the skull remains soft.",
      mom: "You may experience heartburn and shortness of breath as baby grows.",
      appointments: []
    },
    36: {
      size: "Romaine Lettuce",
      development: "Baby is the size of romaine lettuce! Baby is considered full-term soon!",
      mom: "Pack your hospital bag and prepare for weekly appointments.",
      appointments: ["Weekly prenatal visits begin", "Group B Strep test"]
    },
    40: {
      size: "Watermelon",
      development: "Baby is the size of a watermelon! Baby is ready to be born!",
      mom: "You're at your due date! Baby could arrive any day now.",
      appointments: ["Due date assessment", "Possible induction discussion"]
    }
  };

  // Theme management
  const themes = {
    pink: {
      primary: 'rgb(236, 72, 153)', // pink-500
      secondary: 'rgb(249, 168, 212)', // pink-300
      background: 'rgb(253, 242, 248)', // pink-50
      ring: 'focus:ring-pink-500',
      progress: 'bg-pink-500',
      button: 'bg-pink-500',
      checkbox: 'text-pink-500'
    },
    blue: {
      primary: 'rgb(59, 130, 246)', // blue-500
      secondary: 'rgb(147, 197, 253)', // blue-300
      background: 'rgb(239, 246, 255)', // blue-50
      ring: 'focus:ring-blue-500',
      progress: 'bg-blue-500',
      button: 'bg-blue-500',
      checkbox: 'text-blue-500'
    },
    dark: {
      primary: 'rgb(209, 213, 219)', // gray-300
      secondary: 'rgb(156, 163, 175)', // gray-400
      background: 'rgb(31, 41, 55)', // gray-800
      ring: 'focus:ring-gray-500',
      progress: 'bg-gray-500',
      button: 'bg-gray-700',
      checkbox: 'text-gray-500'
    }
  };

  let currentTheme = 'pink';

  // Theme switching functionality
  function applyTheme(themeName) {
    currentTheme = themeName;
    const theme = themes[themeName];
    
    // Update CSS custom properties
    document.documentElement.style.setProperty('--theme-primary', theme.primary);
    document.documentElement.style.setProperty('--theme-secondary', theme.secondary);
    document.documentElement.style.setProperty('--theme-background', theme.background);
    
    // Update theme classes
    document.querySelectorAll('.theme-text').forEach(el => {
      el.style.color = theme.primary;
    });
    
    document.querySelectorAll('.theme-bg').forEach(el => {
      if (themeName === 'dark') {
        el.style.backgroundColor = theme.background;
        el.style.color = 'white';
      } else {
        el.style.backgroundColor = 'white';
        el.style.color = 'inherit';
      }
    });
    
    document.querySelectorAll('.theme-card').forEach(el => {
      if (themeName === 'dark') {
        el.style.backgroundColor = 'rgb(55, 65, 81)'; // gray-700
      } else {
        el.style.backgroundColor = theme.background;
      }
    });
    
    document.querySelectorAll('.theme-progress').forEach(el => {
      el.className = el.className.replace(/bg-\w+-\d+/, theme.progress.replace('bg-', ''));
    });
    
    document.querySelectorAll('.theme-button').forEach(el => {
      el.className = el.className.replace(/bg-\w+-\d+/, theme.button.replace('bg-', ''));
    });

    // Update button borders to show active theme
    document.querySelectorAll('[id^="theme-"]').forEach(btn => {
      btn.style.borderColor = 'transparent';
    });
    document.getElementById(`theme-${themeName}`).style.borderColor = theme.primary;
    
    // Save theme preference
    localStorage.setItem('pregnancyTrackerTheme', themeName);
  }

  // Calculate pregnancy week and progress
  function calculatePregnancy(dueDate) {
    const today = new Date();
    const due = new Date(dueDate);
    const pregnancyStart = new Date(due.getTime() - (40 * 7 * 24 * 60 * 60 * 1000)); // 40 weeks before due date
    
    const daysSinceStart = Math.floor((today - pregnancyStart) / (24 * 60 * 60 * 1000));
    const currentWeek = Math.floor(daysSinceStart / 7);
    const daysRemaining = Math.max(0, Math.floor((due - today) / (24 * 60 * 60 * 1000)));
    const weeksRemaining = Math.max(0, Math.floor(daysRemaining / 7));
    
    const progress = Math.min(100, Math.max(0, (currentWeek / 40) * 100));
    
    let trimester = 1;
    if (currentWeek >= 28) trimester = 3;
    else if (currentWeek >= 13) trimester = 2;
    
    return {
      currentWeek: Math.max(1, Math.min(40, currentWeek)),
      daysRemaining,
      weeksRemaining,
      progress,
      trimester
    };
  }

  // Update display with pregnancy information
  function updatePregnancyDisplay(data) {
    document.getElementById('current-week').textContent = `Week ${data.currentWeek}`;
    document.getElementById('progress-percentage').textContent = `${Math.round(data.progress)}%`;
    document.getElementById('progress-bar').style.width = `${data.progress}%`;
    document.getElementById('trimester-number').textContent = data.trimester;
    document.getElementById('weeks-remaining').textContent = data.weeksRemaining;
    document.getElementById('days-remaining').textContent = data.daysRemaining;
    
    // Update weekly development content
    const weekData = pregnancyData[data.currentWeek] || pregnancyData[Math.floor(data.currentWeek / 4) * 4];
    if (weekData) {
      document.getElementById('weekly-content').innerHTML = `
        <div class="grid md:grid-cols-2 gap-6">
          <div class="text-center">
            <div class="text-6xl mb-4">🍎</div>
            <h3 class="text-lg font-semibold theme-text mb-2">Baby Size</h3>
            <p class="text-gray-600">${weekData.size}</p>
          </div>
          <div>
            <h3 class="text-lg font-semibold theme-text mb-2">Development</h3>
            <p class="text-gray-700 mb-4">${weekData.development}</p>
            <h3 class="text-lg font-semibold theme-text mb-2">For Mom</h3>
            <p class="text-gray-700">${weekData.mom}</p>
          </div>
        </div>
      `;
    }
    
    // Update appointment reminders
    const appointments = weekData?.appointments || [];
    const appointmentContainer = document.getElementById('appointment-reminders');
    if (appointments.length > 0) {
      appointmentContainer.innerHTML = appointments.map(apt => `
        <div class="flex items-center p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
          <div class="flex-shrink-0 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center">
            <i class="fas fa-calendar-check text-white text-sm"></i>
          </div>
          <div class="ml-3">
            <p class="text-sm font-medium text-gray-900">${apt}</p>
            <p class="text-sm text-gray-600">Recommended for week ${data.currentWeek}</p>
          </div>
        </div>
      `).join('');
    } else {
      appointmentContainer.innerHTML = '<div class="text-center text-gray-500 py-4">No appointments scheduled for this week.</div>';
    }
  }

  // Initialize the tracker
  document.addEventListener('DOMContentLoaded', function() {
    // Load saved theme
    const savedTheme = localStorage.getItem('pregnancyTrackerTheme') || 'pink';
    applyTheme(savedTheme);
    
    // Load saved due date
    const savedDueDate = localStorage.getItem('pregnancyDueDate');
    if (savedDueDate) {
      document.getElementById('due-date').value = savedDueDate;
      const pregnancyData = calculatePregnancy(savedDueDate);
      updatePregnancyDisplay(pregnancyData);
    }
    
    // Theme switcher event listeners
    document.getElementById('theme-pink').addEventListener('click', () => applyTheme('pink'));
    document.getElementById('theme-blue').addEventListener('click', () => applyTheme('blue'));
    document.getElementById('theme-dark').addEventListener('click', () => applyTheme('dark'));
    
    // Due date change listener
    document.getElementById('due-date').addEventListener('change', function(e) {
      const dueDate = e.target.value;
      if (dueDate) {
        localStorage.setItem('pregnancyDueDate', dueDate);
        const pregnancyData = calculatePregnancy(dueDate);
        updatePregnancyDisplay(pregnancyData);
      }
    });
    
    // Save notes functionality
    document.getElementById('save-notes').addEventListener('click', function() {
      const notes = document.getElementById('weekly-notes').value;
      const week = document.getElementById('current-week').textContent;
      localStorage.setItem(`pregnancy-notes-${week}`, notes);
      
      // Show success message
      const button = this;
      const originalText = button.textContent;
      button.textContent = 'Saved!';
      button.style.backgroundColor = '#10b981'; // green-500
      setTimeout(() => {
        button.textContent = originalText;
        applyTheme(currentTheme); // Restore theme colors
      }, 2000);
    });
    
    // Load saved notes when week changes
    const observer = new MutationObserver(function() {
      const week = document.getElementById('current-week').textContent;
      const savedNotes = localStorage.getItem(`pregnancy-notes-${week}`);
      if (savedNotes) {
        document.getElementById('weekly-notes').value = savedNotes;
      }
    });
    observer.observe(document.getElementById('current-week'), { childList: true, characterData: true });
    
    // Symptom tracking
    document.querySelectorAll('.symptom-checkbox').forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        const week = document.getElementById('current-week').textContent;
        const symptoms = Array.from(document.querySelectorAll('.symptom-checkbox:checked'))
          .map(cb => cb.dataset.symptom);
        localStorage.setItem(`pregnancy-symptoms-${week}`, JSON.stringify(symptoms));
      });
    });
  });
</script>

<style>
  .theme-ring {
    --tw-ring-color: var(--theme-primary);
  }
  
  .theme-checkbox:checked {
    background-color: var(--theme-primary);
    border-color: var(--theme-primary);
  }
  
  /* Dark theme specific styles */
  [data-theme="dark"] {
    background-color: rgb(17, 24, 39);
    color: white;
  }
  
  [data-theme="dark"] .theme-bg {
    background-color: rgb(31, 41, 55) !important;
    color: white !important;
  }
  
  /* Custom scrollbar for dark theme */
  [data-theme="dark"] ::-webkit-scrollbar {
    width: 8px;
  }
  
  [data-theme="dark"] ::-webkit-scrollbar-track {
    background: rgb(55, 65, 81);
  }
  
  [data-theme="dark"] ::-webkit-scrollbar-thumb {
    background: rgb(107, 114, 128);
    border-radius: 4px;
  }
</style>